{"Protocols/SnapscreenSnapperDelegate.html#/c:objc(pl)SnapscreenSnapperDelegate(im)snapscreenSnapperDidSnapResult:":{"name":"-snapscreenSnapperDidSnapResult:","abstract":"<p>Snapping did occur and did find at least one result.</p>","parent_name":"SnapscreenSnapperDelegate"},"Protocols/SnapscreenSnapperDelegate.html#/c:objc(pl)SnapscreenSnapperDelegate(im)snapscreenSnapperDidSnapNoResult":{"name":"-snapscreenSnapperDidSnapNoResult","abstract":"<p>Snapping did occur but did not yield any results.</p>","parent_name":"SnapscreenSnapperDelegate"},"Protocols/SnapscreenSnapperDelegate.html#/c:objc(pl)SnapscreenSnapperDelegate(im)snapscreenSnapperDidFailWithError:":{"name":"-snapscreenSnapperDidFailWithError:","abstract":"<p>Snapping did fail with an error.</p>","parent_name":"SnapscreenSnapperDelegate"},"Protocols/SnapscreenSnapperDelegate.html#/c:objc(pl)SnapscreenSnapperDelegate(im)snapscreenSnapperDidDetectQuadrangleWithTopLeft:topRight:bottomRight:bottomLeft:":{"name":"-snapscreenSnapperDidDetectQuadrangleWithTopLeft:topRight:bottomRight:bottomLeft:","abstract":"<p>Snapper did detect a quadrangle. Note that the quadrangle is detected in the orientation (= device orientation) and resolution of the provided sample buffer and may need to be scaled and rotated according to your UI presentation.</p>","parent_name":"SnapscreenSnapperDelegate"},"Protocols/SnapscreenSnapperDelegate.html#/c:objc(pl)SnapscreenSnapperDelegate(im)snapscreenSnapperDidLoseQuadrangle":{"name":"-snapscreenSnapperDidLoseQuadrangle","abstract":"<p>Snapper did not detect a quadrangle in the provided buffer</p>","parent_name":"SnapscreenSnapperDelegate"},"Protocols/SnapscreenKitTrackingDelegate.html#/c:objc(pl)SnapscreenKitTrackingDelegate(im)snapscreenKitDidTrackEvent:infoDictionary:":{"name":"-snapscreenKitDidTrackEvent:infoDictionary:","abstract":"<p>Informs the delegate about an event that happened</p>","parent_name":"SnapscreenKitTrackingDelegate"},"Protocols/SnapscreenKitDelegate.html#/c:objc(pl)SnapscreenKitDelegate(im)snapscreenKitDidFailWithError:":{"name":"-snapscreenKitDidFailWithError:","abstract":"<p>Initializing SnapscreenKit failed and Snapscreen functionality is not available to your application.</p>","parent_name":"SnapscreenKitDelegate"},"Protocols/SnapscreenSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapViewControllerDelegate(im)snapscreenDidSnapResult:selectedResultEntry:":{"name":"-snapscreenDidSnapResult:selectedResultEntry:","abstract":"<p>Snapping did occur and did find at least one result. You should dismiss the UI in this case and continue in your application&rsquo;s flow that uses the snap result. </p>","parent_name":"SnapscreenSnapViewControllerDelegate"},"Protocols/SnapscreenSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapViewControllerDelegate(im)snapscreenSnapViewControllerDidSnapNoResults:":{"name":"-snapscreenSnapViewControllerDidSnapNoResults:","abstract":"<p>Snapping did occur but did not yield any results. The SnapscreenSnapViewController presents an inline error in the UI in that case and you may decide to keep on snapping or dismiss the view controller.</p>","parent_name":"SnapscreenSnapViewControllerDelegate"},"Protocols/SnapscreenSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapViewControllerDelegate(im)snapscreenSnapViewController:didFailWithError:":{"name":"-snapscreenSnapViewController:didFailWithError:","abstract":"<p>Snapping did fail with an error and is most likely to not succeed subsequently as well. You should dismiss the SnapscreenSnapViewController and present an error to the user.</p>","parent_name":"SnapscreenSnapViewControllerDelegate"},"Protocols/SnapscreenSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapViewControllerDelegate(im)snapscreenSnapViewControllerDidCancel:":{"name":"-snapscreenSnapViewControllerDidCancel:","abstract":"<p>The user did cancel snapping. You should dismiss the SnapscreenSnapViewController.</p>","parent_name":"SnapscreenSnapViewControllerDelegate"},"Protocols/SnapscreenARSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenARSnapViewControllerDelegate(im)snapscreenARViewController:didPrepareDrawingView:":{"name":"-snapscreenARViewController:didPrepareDrawingView:","abstract":"<p>The view controller perform initial setup and provides the given view for you to draw into</p>","parent_name":"SnapscreenARSnapViewControllerDelegate"},"Protocols/SnapscreenARSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenARSnapViewControllerDelegate(im)snapscreenARViewController:didFindResult:":{"name":"-snapscreenARViewController:didFindResult:","abstract":"<p>Autosnapping did occur and found the given result (which may include more than one result entry. The result also contains the quadrangle that marks the area in view coordinates where the result was detected. Note that you will receive the same logical result multiple times in sequence if e.g. the user keeps the camera pointed at a TV. The quadrangle is continuously updated to reflect any changes in camera position.</p>","parent_name":"SnapscreenARSnapViewControllerDelegate"},"Protocols/SnapscreenARSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenARSnapViewControllerDelegate(im)snapscreenARViewControllerDidLoseResult:":{"name":"-snapscreenARViewControllerDidLoseResult:","abstract":"<p>Autosnapping lost a given result.</p>","parent_name":"SnapscreenARSnapViewControllerDelegate"},"Protocols/SnapscreenARSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenARSnapViewControllerDelegate(im)snapscreenARSnapViewControllerDidCancel:":{"name":"-snapscreenARSnapViewControllerDidCancel:","abstract":"<p>The user did cancel snapping. You should dismiss the SnapscreenARSnapViewController.</p>","parent_name":"SnapscreenARSnapViewControllerDelegate"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapResultsViewControllerDelegate(im)snapscreenSnapResultsViewControllerBackgroundColorForResultTableView:":{"name":"-snapscreenSnapResultsViewControllerBackgroundColorForResultTableView:","abstract":"<p>Provides the ability to set a custom color for the result table view</p>","parent_name":"SnapscreenSnapResultsViewControllerDelegate"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapResultsViewControllerDelegate(im)snapscreenSnapResultsViewController:registerCustomContentClassesForTableView:":{"name":"-snapscreenSnapResultsViewController:registerCustomContentClassesForTableView:","abstract":"<p>Provides the ability to register custom cell and header classes for UI customization. Do not implement if no customization should be used.</p>","parent_name":"SnapscreenSnapResultsViewControllerDelegate"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapResultsViewControllerDelegate(im)snapscreenSnapResultsViewController:tableView:cellForRowAtIndexPath:withSearchResultEntry:":{"name":"-snapscreenSnapResultsViewController:tableView:cellForRowAtIndexPath:withSearchResultEntry:","abstract":"<p>Provides the ability to return a custom UITableViewCell to use for display the given searchResultEntry. The entry can be of one of the following types: <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenTvSearchResultEntry.html\">SnapscreenTvSearchResultEntry</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenSportEventSearchResultEntry.html\">SnapscreenSportEventSearchResultEntry</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenAdvertisementSearchResultEntry.html\">SnapscreenAdvertisementSearchResultEntry</a></code>. Return nil or do not implement if the standard cells should be used.</p>","parent_name":"SnapscreenSnapResultsViewControllerDelegate"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapResultsViewControllerDelegate(im)snapscreenSnapResultsViewController:tableView:heightForRowAtIndexPath:withSearchResultEntry:":{"name":"-snapscreenSnapResultsViewController:tableView:heightForRowAtIndexPath:withSearchResultEntry:","abstract":"<p>When using a custom UITableViewCell for displaying a given searchResultEntry, should return the height for it or UITableViewAutomaticDimension. Return 0 or do not implement if the standard cells should be used.</p>","parent_name":"SnapscreenSnapResultsViewControllerDelegate"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapResultsViewControllerDelegate(im)snapscreenSnapResultsViewController:tableView:heightForHeaderInSection:":{"name":"-snapscreenSnapResultsViewController:tableView:heightForHeaderInSection:","abstract":"<p>When using a custom section header for the list of search results, should return the height for the custom section header. Return 0 or do not implement if the default header should be used.</p>","parent_name":"SnapscreenSnapResultsViewControllerDelegate"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapResultsViewControllerDelegate(im)snapscreenSnapResultsViewController:tableView:viewForHeaderInSection:":{"name":"-snapscreenSnapResultsViewController:tableView:viewForHeaderInSection:","abstract":"<p>Provides the ability to return a custom Section Header to use for the list of search results. Return nil or do not implement if the default header should be shown.</p>","parent_name":"SnapscreenSnapResultsViewControllerDelegate"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html#/c:objc(pl)SnapscreenSnapResultsViewControllerDelegate(im)snapscreenSnapResultsViewController:placeholderImageForResultEntry:":{"name":"-snapscreenSnapResultsViewController:placeholderImageForResultEntry:","abstract":"<p>Provides the ability to return a custom placeholder image to use when loading the main image for a search result entry. Is only applied when not providing custom cells.</p>","parent_name":"SnapscreenSnapResultsViewControllerDelegate"},"Protocols/SnapscreenClipSharingDelegate.html#/c:objc(pl)SnapscreenClipSharingDelegate(im)clipSharingViewControllerDidCancel:":{"name":"-clipSharingViewControllerDidCancel:","abstract":"<p>The user cancelled the sharing process. This callback will only be received if the sharing view is presented modally and the navigation item to dismiss was not modified.</p>","parent_name":"SnapscreenClipSharingDelegate"},"Protocols/SnapscreenClipSharingDelegate.html#/c:objc(pl)SnapscreenClipSharingDelegate(im)clipSharingViewController:didShareVideoSnippet:":{"name":"-clipSharingViewController:didShareVideoSnippet:","abstract":"<p>The user completed the sharing process and selected a clip to share.</p>","parent_name":"SnapscreenClipSharingDelegate"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenClipSnapViewControllerDelegate(im)clipSnapViewController:shouldSetManualSnapButtonEnabled:":{"name":"-clipSnapViewController:shouldSetManualSnapButtonEnabled:","abstract":"<p>Informs the delegate about whether a manual snap button should be enabled or not</p>","parent_name":"SnapscreenClipSnapViewControllerDelegate"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenClipSnapViewControllerDelegate(im)clipSnapViewController:didSnapResultEntry:":{"name":"-clipSnapViewController:didSnapResultEntry:","abstract":"<p>Informs the delegate that a snap result was captured</p>","parent_name":"SnapscreenClipSnapViewControllerDelegate"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenClipSnapViewControllerDelegate(im)clipSnapViewController:didResizeViewFinderToSize:":{"name":"-clipSnapViewController:didResizeViewFinderToSize:","abstract":"<p>Informs the delegate about a change of the viewfinder size. The viewfinder is always positioned in the center of the full view.</p>","parent_name":"SnapscreenClipSnapViewControllerDelegate"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenClipSnapViewControllerDelegate(im)clipSnapViewControllerDidStartImageCapture:":{"name":"-clipSnapViewControllerDidStartImageCapture:","abstract":"<p>Informs the delegate when the setup of the snap view is complete and camera capture has started. Also called when the camera feed is restarted, e.g. after the application got inactive or the user navigated away from the viewcontroller and back again.</p>","parent_name":"SnapscreenClipSnapViewControllerDelegate"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenClipSnapViewControllerDelegate(im)clipSnapViewControllerDidStopImageCapture:":{"name":"-clipSnapViewControllerDidStopImageCapture:","abstract":"<p>Informs the delegate that camera capture has stopped</p>","parent_name":"SnapscreenClipSnapViewControllerDelegate"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenClipSnapViewControllerDelegate(im)clipSnapViewControllerShouldShowStandardStatusUpdates:":{"name":"-clipSnapViewControllerShouldShowStandardStatusUpdates:","abstract":"<p>Asks the delegate whether standard status updates should be shown - including progress and error messages. Defaults to YES if not implemented.","parent_name":"SnapscreenClipSnapViewControllerDelegate"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html#/c:objc(pl)SnapscreenClipSnapViewControllerDelegate(im)clipSnapViewController:didUpdateStatus:":{"name":"-clipSnapViewController:didUpdateStatus:","abstract":"<p>Informs the delegate that a certain status update should be shown</p>","parent_name":"SnapscreenClipSnapViewControllerDelegate"},"Protocols/SnapscreenLocationProvider.html#/c:objc(pl)SnapscreenLocationProvider(im)currentUserLocation":{"name":"-currentUserLocation","abstract":"<p>Return the currently determined user location.</p>","parent_name":"SnapscreenLocationProvider"},"Protocols/SnapscreenLocationProvider.html#/c:objc(pl)SnapscreenLocationProvider(im)updateCurrentUserLocation":{"name":"-updateCurrentUserLocation","abstract":"<p>Called by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenKit.html\">SnapscreenKit</a></code> if an updated user location is preferred.</p>","parent_name":"SnapscreenLocationProvider"},"Protocols/SnapscreenLoggingHandler.html#/c:objc(pl)SnapscreenLoggingHandler(im)logFatal:":{"name":"-logFatal:","abstract":"<p>Log a message with level FATAL</p>","parent_name":"SnapscreenLoggingHandler"},"Protocols/SnapscreenLoggingHandler.html#/c:objc(pl)SnapscreenLoggingHandler(im)logError:":{"name":"-logError:","abstract":"<p>Log a message with level ERROR</p>","parent_name":"SnapscreenLoggingHandler"},"Protocols/SnapscreenLoggingHandler.html#/c:objc(pl)SnapscreenLoggingHandler(im)logWarn:":{"name":"-logWarn:","abstract":"<p>Log a message with level WARN</p>","parent_name":"SnapscreenLoggingHandler"},"Protocols/SnapscreenLoggingHandler.html#/c:objc(pl)SnapscreenLoggingHandler(im)logInfo:":{"name":"-logInfo:","abstract":"<p>Log a message with level INFO</p>","parent_name":"SnapscreenLoggingHandler"},"Protocols/SnapscreenLoggingHandler.html#/c:objc(pl)SnapscreenLoggingHandler(im)logDebug:":{"name":"-logDebug:","abstract":"<p>Log a message with level DEBUG</p>","parent_name":"SnapscreenLoggingHandler"},"Protocols/SnapscreenLoggingHandler.html#/c:objc(pl)SnapscreenLoggingHandler(im)logVerbose:":{"name":"-logVerbose:","abstract":"<p>Log a message with level VERBOSE</p>","parent_name":"SnapscreenLoggingHandler"},"Protocols/SnapscreenLoggingHandler.html":{"name":"SnapscreenLoggingHandler","abstract":"<p>SnapscreenLoggingHandler offers an interface to receive log messages from SnapscreenKit in your application and connect logging to a custom logging framework of your choice.</p>"},"Protocols/SnapscreenLocationProvider.html":{"name":"SnapscreenLocationProvider","abstract":"<p>Protocol for providing location to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenKit.html\">SnapscreenKit</a></code>. Pass an implementation of this protocol to SnapscreenKit"},"Protocols/SnapscreenClipSnapViewControllerDelegate.html":{"name":"SnapscreenClipSnapViewControllerDelegate","abstract":"<p>Delegate to let the user of the SnapViewController know if manual snapping should be enabled</p>"},"Protocols/SnapscreenClipSharingDelegate.html":{"name":"SnapscreenClipSharingDelegate","abstract":"<p>Delegate for callbacks during the clip sharing process.</p>"},"Protocols/SnapscreenSnapResultsViewControllerDelegate.html":{"name":"SnapscreenSnapResultsViewControllerDelegate","abstract":"<p>Provides callback from the SnapscreenSnapResultsViewController during the result selection process.</p>"},"Protocols/SnapscreenARSnapViewControllerDelegate.html":{"name":"SnapscreenARSnapViewControllerDelegate","abstract":"<p>Provides callbacks from the SnapscreenARSnapViewController during the snapping process</p>"},"Protocols/SnapscreenSnapViewControllerDelegate.html":{"name":"SnapscreenSnapViewControllerDelegate","abstract":"<p>Provides callback from the SnapscreenSnapViewController during the snapping process.</p>"},"Protocols/SnapscreenKitDelegate.html":{"name":"SnapscreenKitDelegate","abstract":"<p>Delegate for important callbacks of SnapscreenKit. Implement this to listen for any issues that might make SnapscreenKit unavailable in your application.</p>"},"Protocols/SnapscreenKitTrackingDelegate.html":{"name":"SnapscreenKitTrackingDelegate","abstract":"<p>Delegate for tracking events of the Snapscreen SDK. Implement this to get informed about events from the SDK to implement tracking or statistical analysis.</p>"},"Protocols/SnapscreenSnapperDelegate.html":{"name":"SnapscreenSnapperDelegate","abstract":"<p>Provides callbacks from the SnapscreenSnapper.</p>"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventInit":{"name":"SnapscreenTrackingEventInit","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventTokenAcquired":{"name":"SnapscreenTrackingEventTokenAcquired","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventTokenAcquisitionFailed":{"name":"SnapscreenTrackingEventTokenAcquisitionFailed","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventSnapViewOpen":{"name":"SnapscreenTrackingEventSnapViewOpen","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventSnapViewClose":{"name":"SnapscreenTrackingEventSnapViewClose","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventSnapViewSnap":{"name":"SnapscreenTrackingEventSnapViewSnap","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventSnapViewSnapResult":{"name":"SnapscreenTrackingEventSnapViewSnapResult","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventSnapViewSnapNegative":{"name":"SnapscreenTrackingEventSnapViewSnapNegative","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventSnapViewSnapFail":{"name":"SnapscreenTrackingEventSnapViewSnapFail","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareOpen":{"name":"SnapscreenTrackingEventClipShareOpen","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareNotFound":{"name":"SnapscreenTrackingEventClipShareNotFound","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareOpenFail":{"name":"SnapscreenTrackingEventClipShareOpenFail","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipSharePreviewPlay":{"name":"SnapscreenTrackingEventClipSharePreviewPlay","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipSharePreviewClose":{"name":"SnapscreenTrackingEventClipSharePreviewClose","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareCreate":{"name":"SnapscreenTrackingEventClipShareCreate","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareCreated":{"name":"SnapscreenTrackingEventClipShareCreated","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareCreateFail":{"name":"SnapscreenTrackingEventClipShareCreateFail","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareShare":{"name":"SnapscreenTrackingEventClipShareShare","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareShared":{"name":"SnapscreenTrackingEventClipShareShared","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareSharedTo":{"name":"SnapscreenTrackingEventClipShareSharedTo","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareCancel":{"name":"SnapscreenTrackingEventClipShareCancel","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventClipShareClose":{"name":"SnapscreenTrackingEventClipShareClose","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventAskForCameraPermission":{"name":"SnapscreenTrackingEventAskForCameraPermission","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventAskForCameraPermissionGranted":{"name":"SnapscreenTrackingEventAskForCameraPermissionGranted","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenTrackingEvent.html#/c:@E@SnapscreenTrackingEvent@SnapscreenTrackingEventAskForCameraPermissionDenied":{"name":"SnapscreenTrackingEventAskForCameraPermissionDenied","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenTrackingEvent"},"Enums/SnapscreenARViewFinderMode.html#/c:@E@SnapscreenARViewFinderMode@SnapscreenARViewFinderModeDefaultSquare":{"name":"SnapscreenARViewFinderModeDefaultSquare","abstract":"<p>The default mode for AR - a square that fills the entire width in portrait and entire height in landscape.</p>","parent_name":"SnapscreenARViewFinderMode"},"Enums/SnapscreenARViewFinderMode.html#/c:@E@SnapscreenARViewFinderMode@SnapscreenARViewFinderModeStandardMode":{"name":"SnapscreenARViewFinderModeStandardMode","abstract":"<p>The standard mode from the non-AR snap - a rectangular view finder</p>","parent_name":"SnapscreenARViewFinderMode"},"Enums/SnapscreenClipSnapStatus.html#/c:@E@SnapscreenClipSnapStatus@SnapscreenClipSnapStatusSnapDetectingTV":{"name":"SnapscreenClipSnapStatusSnapDetectingTV","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenClipSnapStatus"},"Enums/SnapscreenClipSnapStatus.html#/c:@E@SnapscreenClipSnapStatus@SnapscreenClipSnapStatusSnapCalculatingFingerprint":{"name":"SnapscreenClipSnapStatusSnapCalculatingFingerprint","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenClipSnapStatus"},"Enums/SnapscreenClipSnapStatus.html#/c:@E@SnapscreenClipSnapStatus@SnapscreenClipSnapStatusSnapSendingFingerprint":{"name":"SnapscreenClipSnapStatusSnapSendingFingerprint","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenClipSnapStatus"},"Enums/SnapscreenClipSnapStatus.html#/c:@E@SnapscreenClipSnapStatus@SnapscreenClipSnapStatusSnapWaitingForResponse":{"name":"SnapscreenClipSnapStatusSnapWaitingForResponse","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenClipSnapStatus"},"Enums/SnapscreenClipSnapStatus.html#/c:@E@SnapscreenClipSnapStatus@SnapscreenClipSnapStatusSnapError":{"name":"SnapscreenClipSnapStatusSnapError","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenClipSnapStatus"},"Enums/SnapscreenClipSnapStatus.html#/c:@E@SnapscreenClipSnapStatus@SnapscreenClipSnapStatusSnapNoResults":{"name":"SnapscreenClipSnapStatusSnapNoResults","abstract":"<p>Undocumented</p>","parent_name":"SnapscreenClipSnapStatus"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenClientCredentialsMissing":{"name":"SnapscreenClientCredentialsMissing","abstract":"<p>Authentication credentials (clientID and clientSecret) are missing</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenClientCredentialsInvalid":{"name":"SnapscreenClientCredentialsInvalid","abstract":"<p>The provided authentication credentials (clientID and clientSecret) are invalid</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenResourceBundleMissing":{"name":"SnapscreenResourceBundleMissing","abstract":"<p>The resource bundle (SnapscreenKit.bundle) is missing from the application bundle</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenWebSearchError":{"name":"SnapscreenWebSearchError","abstract":"<p>An error occured while loading webresources</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenWebSearchNoResults":{"name":"SnapscreenWebSearchNoResults","abstract":"<p>Web search resulted in no results</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenAccessTokenMissing":{"name":"SnapscreenAccessTokenMissing","abstract":"<p>No access token could be fetched</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenSnapperConfigurationMissing":{"name":"SnapscreenSnapperConfigurationMissing","abstract":"<p>Direct snap was attempted without providing SnapConfiguration</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenSnapperUnknownError":{"name":"SnapscreenSnapperUnknownError","abstract":"<p>Direct snap failed because of an unknown error</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenErrorCode.html#/c:@E@SnapscreenErrorCode@SnapscreenSnapperCancelled":{"name":"SnapscreenSnapperCancelled","abstract":"<p>Direct snap was cancelled</p>","parent_name":"SnapscreenErrorCode"},"Enums/SnapscreenSearchType.html#/c:@E@SnapscreenSearchType@SnapscreenSearchTypeNone":{"name":"SnapscreenSearchTypeNone","abstract":"<p>Placeholder for none</p>","parent_name":"SnapscreenSearchType"},"Enums/SnapscreenSearchType.html#/c:@E@SnapscreenSearchType@SnapscreenSearchTypeTv":{"name":"SnapscreenSearchTypeTv","abstract":"<p>Search for tv results</p>","parent_name":"SnapscreenSearchType"},"Enums/SnapscreenSearchType.html#/c:@E@SnapscreenSearchType@SnapscreenSearchTypeAdvertisement":{"name":"SnapscreenSearchTypeAdvertisement","abstract":"<p>Search for advertisements</p>","parent_name":"SnapscreenSearchType"},"Enums/SnapscreenSearchType.html#/c:@E@SnapscreenSearchType@SnapscreenSearchTypeSportEvents":{"name":"SnapscreenSearchTypeSportEvents","abstract":"<p>Search for sport events</p>","parent_name":"SnapscreenSearchType"},"Enums/SnapscreenSearchType.html":{"name":"SnapscreenSearchType","abstract":"<p>A list of possible search types that can be used for snapping</p>"},"Enums/SnapscreenErrorCode.html":{"name":"SnapscreenErrorCode","abstract":"<p>A list of possible error codes that are returned by SnapscreenKit. The error domain for errors from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenKit.html\">SnapscreenKit</a></code> is usually <code>SnapscreenKitErrorDomain</code> unless some underlying error is the cause.</p>"},"Enums/SnapscreenClipSnapStatus.html":{"name":"SnapscreenClipSnapStatus","abstract":"<p>Enum for the status update events sent to the SnapscreenClipSnapViewControllerDelegate</p>"},"Enums/SnapscreenARViewFinderMode.html":{"name":"SnapscreenARViewFinderMode","abstract":"<p>A list of possible view finder modes</p>"},"Enums/SnapscreenTrackingEvent.html":{"name":"SnapscreenTrackingEvent","abstract":"<p>Enum for tracking events sent by the SDK to a SnapscreenKitTrackingDelegate</p>"},"Constants.html#/c:@SnapscreenKitVersionNumber":{"name":"SnapscreenKitVersionNumber","abstract":"<p>Project version number for SnapscreenKit.</p>"},"Constants.html#/c:@SnapscreenKitVersionString":{"name":"SnapscreenKitVersionString","abstract":"<p>Project version string for SnapscreenKit.</p>"},"Classes/SnapscreenSnapper.html#/c:objc(cs)SnapscreenSnapper(py)snapConfiguration":{"name":"snapConfiguration","abstract":"<p>The snap configuration to use when performing snaps or quadrangle detection. Needs to be set before subsequent calls.</p>","parent_name":"SnapscreenSnapper"},"Classes/SnapscreenSnapper.html#/c:objc(cs)SnapscreenSnapper(py)delegate":{"name":"delegate","abstract":"<p>The delegate of the snapper. Should be nil when you are no longer interested in snap results (e.g. after a successful snap)</p>","parent_name":"SnapscreenSnapper"},"Classes/SnapscreenSnapper.html#/c:objc(cs)SnapscreenSnapper(im)performSnapForPixelBuffer:timestamp:":{"name":"-performSnapForPixelBuffer:timestamp:","abstract":"<p>Performs a snap on the provided CVPixelBuffer. If passing a CVPixelBuffer from ARKit, make sure to also pass the timestamp of the ARFrame.</p>","parent_name":"SnapscreenSnapper"},"Classes/SnapscreenSnapper.html#/c:objc(cs)SnapscreenSnapper(im)detectQuadrangleForPixelBuffer:timestamp:":{"name":"-detectQuadrangleForPixelBuffer:timestamp:","parent_name":"SnapscreenSnapper"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(cm)sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:loggingHandler:locationProvider:delegate:":{"name":"+sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:loggingHandler:locationProvider:delegate:","abstract":"<p>Initialize SnapscreenKit</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(cm)sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:backendURL:clipsharingBackendURL:loggingHandler:locationProvider:delegate:trackingDelegate:":{"name":"+sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:backendURL:clipsharingBackendURL:loggingHandler:locationProvider:delegate:trackingDelegate:","abstract":"<p>Initialize SnapscreenKit with custom backend URLs</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(cm)sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:backendURL:clipsharingBackendURL:loggingHandler:locationProvider:delegate:":{"name":"+sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:backendURL:clipsharingBackendURL:loggingHandler:locationProvider:delegate:","abstract":"<p>Initialize SnapscreenKit with custom backend URLs</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(cm)sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:loggingHandler:locationProvider:delegate:customTokenHandling:":{"name":"+sharedSnapscreenKitWithClientID:clientSecret:testEnvironment:loggingHandler:locationProvider:delegate:customTokenHandling:","abstract":"<p>Initialize SnapscreenKit and optionally tell the SDK to skip the automatic token handling. <strong>Note: This should never be necessary by SDK users!</strong></p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(cm)sharedSnapscreenKit":{"name":"+sharedSnapscreenKit","abstract":"<p>Easily access SnapscreenKit once it was initialized before in your application.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)delegate":{"name":"delegate","abstract":"<p>Optional delegate if you want to receive callbacks from SnapscreenKit.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)countryCode":{"name":"countryCode","abstract":"<p>The country code the user is in. Affects the results that are found when snapping. Defaults to AT.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)localeIdentifier":{"name":"localeIdentifier","abstract":"<p>The locale identifier for the user. Affects the web search results that are found and how they are returned. Defaults to de_AT.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)currentSnapscreenTimestamp":{"name":"currentSnapscreenTimestamp","abstract":"<p>A synchronized timestamp representing &lsquo;now&rsquo; - use this if you need a current timestamp for other SnapscreenKit calls and don&rsquo;t want or can&rsquo;t use a result entry from a search.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)loggingHandler":{"name":"loggingHandler","abstract":"<p>Holds the logging handler that was provided when initializing SnapscreenKit.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)locationProvider":{"name":"locationProvider","abstract":"<p>Holds the location provider that was provided when initializing SnapscreenKit.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)trackingDelegate":{"name":"trackingDelegate","abstract":"<p>Holds an optional delegate that can receive various trackable events from the SDK</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)accessTokenHolder":{"name":"accessTokenHolder","abstract":"<p>Container which holds the current access token of SnapscreenKit.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)performsAutomaticTokenHandling":{"name":"performsAutomaticTokenHandling","abstract":"<p>Whether SnapscreenKit performs automatic token handling (corresponds to the value passed in the initializer)</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)customerConfiguration":{"name":"customerConfiguration","abstract":"<p>The current customer configuration - mainly for internal use</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(py)snapper":{"name":"snapper","abstract":"<p>Snapper to access a direct snapping and quadrangle detection API.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(im)instantiateSnapscreenSnapViewControllerWithDelegate:resultsDelegate:configuration:":{"name":"-instantiateSnapscreenSnapViewControllerWithDelegate:resultsDelegate:configuration:","abstract":"<p>Initializes a UIViewController for performing Snaps of Live TV. Should be presented as a modal UIViewController in your application for best experience.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenKit.html#/c:objc(cs)SnapscreenKit(im)instantiateARSnapscreenSnapViewControllerWithDelegate:configuration:":{"name":"-instantiateARSnapscreenSnapViewControllerWithDelegate:configuration:","abstract":"<p>Initializes a UIViewController for performing Live AR display of Snap results. Should be presented as a modal UIViewController in your application for best experience.</p>","parent_name":"SnapscreenKit"},"Classes/SnapscreenSnapViewController.html#/c:objc(cs)SnapscreenSnapViewController(py)delegate":{"name":"delegate","abstract":"<p>The delegate of the view controller. Never should be nil, because the delegate is responsible for dismissing the view.</p>","parent_name":"SnapscreenSnapViewController"},"Classes/SnapscreenSnapViewController.html#/c:objc(cs)SnapscreenSnapViewController(py)tintColor":{"name":"tintColor","abstract":"<p>The tint color to apply to the view finder and zoom level indicator. Defauts to the snapscreen corporate blue. *</p>","parent_name":"SnapscreenSnapViewController"},"Classes/SnapscreenSnapViewController.html#/c:objc(cs)SnapscreenSnapViewController(py)snapButtonImage":{"name":"snapButtonImage","abstract":"<p>The image to use as the snap button. Defaults to a standard camera icon in snapscreen corporate blue. *</p>","parent_name":"SnapscreenSnapViewController"},"Classes/SnapscreenARSnapViewController.html#/c:objc(cs)SnapscreenARSnapViewController(py)arDelegate":{"name":"arDelegate","abstract":"<p>The AR delegate of the view controller. Never should be nil, because the delegate is responsible for dismissing the view.</p>","parent_name":"SnapscreenARSnapViewController"},"Classes/SnapscreenARSnapViewController.html#/c:objc(cs)SnapscreenARSnapViewController(py)arDrawingView":{"name":"arDrawingView","abstract":"<p>A view covering the entire screen that can be used for drawing custom content</p>","parent_name":"SnapscreenARSnapViewController"},"Classes/SnapscreenARSnapViewController.html#/c:objc(cs)SnapscreenARSnapViewController(py)viewFinderMode":{"name":"viewFinderMode","abstract":"<p>The view finder mode - defaults to SnapscreenARViewfinderModeDefaultSquare</p>","parent_name":"SnapscreenARSnapViewController"},"Classes/SnapscreenClipSharingTutorialContent.html#/c:objc(cs)SnapscreenClipSharingTutorialContent(py)image":{"name":"image","abstract":"<p>The image for the tutorial page</p>","parent_name":"SnapscreenClipSharingTutorialContent"},"Classes/SnapscreenClipSharingTutorialContent.html#/c:objc(cs)SnapscreenClipSharingTutorialContent(py)text":{"name":"text","abstract":"<p>The text for the tutorial page shown below the image</p>","parent_name":"SnapscreenClipSharingTutorialContent"},"Classes/SnapscreenClipSharingTutorialContent.html#/c:objc(cs)SnapscreenClipSharingTutorialContent(py)attributedText":{"name":"attributedText","abstract":"<p>The attributed text for the tutorial page shown the image</p>","parent_name":"SnapscreenClipSharingTutorialContent"},"Classes/SnapscreenClipSharingTutorialContent.html#/c:objc(cs)SnapscreenClipSharingTutorialContent(cm)contentWithImage:text:":{"name":"+contentWithImage:text:","abstract":"<p>Initializer for tutorial page with an image and attributed text</p>","parent_name":"SnapscreenClipSharingTutorialContent"},"Classes/SnapscreenClipSharingTutorialContent.html#/c:objc(cs)SnapscreenClipSharingTutorialContent(cm)contentWithImage:attributedText:":{"name":"+contentWithImage:attributedText:","abstract":"<p>Initializer for tutorial page with an image and attributed text</p>","parent_name":"SnapscreenClipSharingTutorialContent"},"Classes/SnapscreenClipSharingViewController.html#/c:objc(cs)SnapscreenClipSharingViewController(im)initWithConfiguration:delegate:":{"name":"-initWithConfiguration:delegate:","abstract":"<p>Initialize the view controller with a sharing configuration and a delegate that receives the callbacks at the end of the sharing process.</p>","parent_name":"SnapscreenClipSharingViewController"},"Classes/SnapscreenClipSharingViewController.html#/c:objc(cs)SnapscreenClipSharingViewController(cm)didCancelSharing":{"name":"+didCancelSharing","abstract":"<p>Call this method to let the ClipSharingViewController know that sharing of the clip was cancelled by the user</p>","parent_name":"SnapscreenClipSharingViewController"},"Classes/SnapscreenClipSharingViewController.html#/c:objc(cs)SnapscreenClipSharingViewController(cm)didShareTo:":{"name":"+didShareTo:","abstract":"<p>Call this method to let the ClipSharingViewController know that the clip was shared by the user, if possible passing the name of the platform (capitalized first letter, e.g. Facebook)</p>","parent_name":"SnapscreenClipSharingViewController"},"Classes/SnapscreenClipSharingNavigationController.html#/c:objc(cs)SnapscreenClipSharingNavigationController(im)initWithConfiguration:delegate:":{"name":"-initWithConfiguration:delegate:","abstract":"<p>Initialize the view controller with a sharing configuration and a delegate that receives the callbacks at the end of the sharing process.</p>","parent_name":"SnapscreenClipSharingNavigationController"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)tutorialContent":{"name":"tutorialContent","abstract":"<p>Content to be displayed in the tutorial</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)tutorialLogoImage":{"name":"tutorialLogoImage","abstract":"<p>Optional logo that is displayed above the tutorial content (and does not scroll with the tutorial content)</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)maximumTutorialLogoImageHeight":{"name":"maximumTutorialLogoImageHeight","abstract":"<p>Maximum Height constraint that is applied to the tutorial logo image on the tutorial page - defaults to -1 which means that the full image height is used</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)largeSponsorImage":{"name":"largeSponsorImage","abstract":"<p>Large sponsor image that is displayed on the snap screen</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)largeTutorialSponsorImage":{"name":"largeTutorialSponsorImage","abstract":"<p>Large sponsor image that is displayed on the tutorial screen</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)smallSponsorImage":{"name":"smallSponsorImage","abstract":"<p>Small sponsor image that is displayed in the trimming UI</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)tutorialBackgroundImage":{"name":"tutorialBackgroundImage","abstract":"<p>Image that is displayed as the background in the tutorial - if nil a white screen is shown</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)mainButtonColor":{"name":"mainButtonColor","abstract":"<p>Background Color of the main actions - defaults to rgb(0,37,68)</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)snapViewFinderTintColor":{"name":"snapViewFinderTintColor","abstract":"<p>Tint color of the viewfinder - defaults to rgb(61,118,197)</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)mainButtonFont":{"name":"mainButtonFont","abstract":"<p>Font of the main actions - defaults to system font 14</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)snapButtonImage":{"name":"snapButtonImage","abstract":"<p>Image to be used for the manual snap button (only the centered icon - the button background color will be mainButtonColor) - defaults to the snap_icon provided with the SDK</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)snapButtonTitle":{"name":"snapButtonTitle","abstract":"<p>Title to be used for the manual snap button (show below the snapButtonImage) - defaults to localize key Snapscreen_Snap_Button_Title</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)snapButtonTitleFont":{"name":"snapButtonTitleFont","abstract":"<p>Font to be used for the title of the manual snap button (show below the snapButtonImage) - defaults to system font 14</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)mainButtonTextColor":{"name":"mainButtonTextColor","abstract":"<p>Text color of the main action buttons - defaults to white</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)tutorialTextColor":{"name":"tutorialTextColor","abstract":"<p>Text color for the tutorial text - defaults to black</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)tutorialFont":{"name":"tutorialFont","abstract":"<p>Font for the tutorial text - defaults to system font 14</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)sharingIntroductionHint":{"name":"sharingIntroductionHint","abstract":"<p>AttributedString for the sharing introduction hint - displayed briefly on the trimming UI before switching to large sponsor image</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)sharingIntroductionHintImage":{"name":"sharingIntroductionHintImage","abstract":"<p>Image for the sharing introduction hint - displayed briefly on the trimming UI before switching to large sponsor image</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)maximumSponsorImageHeight":{"name":"maximumSponsorImageHeight","abstract":"<p>Maximum Height constraint that is applied to the large sponsor image on the snap screen - defaults to -1 which means that the full image height is used</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)maximumTutorialSponsorImageHeight":{"name":"maximumTutorialSponsorImageHeight","abstract":"<p>Maximum Height constraint that is applied to the large sponsor image on the tutorial screen - defaults to -1 which means that the full image height is used</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)maximumSmallSponsorImageHeight":{"name":"maximumSmallSponsorImageHeight","abstract":"<p>Maximum Height constraint that is applied to the small sponsor image on the trimming page - defaults to -1 which means that the full image height is used</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)automaticSnap":{"name":"automaticSnap","abstract":"<p>Perform automatic snapping. Defaults to true</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)autosnapIntervalInSeconds":{"name":"autosnapIntervalInSeconds","abstract":"<p>The minimum interval between automatic snap attempts in seconds; Defaults to 0.5</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)autosnapTimeoutDuration":{"name":"autosnapTimeoutDuration","abstract":"<p>The time interval after which automatic snapping stops when no results are found; Defaults to 30 seconds</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSharingConfiguration.html#/c:objc(cs)SnapscreenClipSharingConfiguration(py)quadrangleDetection":{"name":"quadrangleDetection","abstract":"<p>Perform quadrangle detection and highlighting. Defaults to YES</p>","parent_name":"SnapscreenClipSharingConfiguration"},"Classes/SnapscreenClipSnapViewController.html#/c:objc(cs)SnapscreenClipSnapViewController(py)shouldHideStandardViewFinderAndQuadrangleDetection":{"name":"shouldHideStandardViewFinderAndQuadrangleDetection","abstract":"<p>Provides the direct user of this view controller to hide the standard viewfinder and quadrangle detection UI.</p>","parent_name":"SnapscreenClipSnapViewController"},"Classes/SnapscreenClipSnapViewController.html#/c:objc(cs)SnapscreenClipSnapViewController(im)initWithConfiguration:delegate:":{"name":"-initWithConfiguration:delegate:","abstract":"<p>Initialize the view controller with a sharing configuration and a delegate that receives the callbacks at the end of the snap process.</p>","parent_name":"SnapscreenClipSnapViewController"},"Classes/SnapscreenClipSnapViewController.html#/c:objc(cs)SnapscreenClipSnapViewController(im)takeManualSnap":{"name":"-takeManualSnap","abstract":"<p>Initiates a manual snap</p>","parent_name":"SnapscreenClipSnapViewController"},"Classes/SnapscreenClipSnapViewController.html#/c:objc(cs)SnapscreenClipSnapViewController(im)stopCameraCapture":{"name":"-stopCameraCapture","abstract":"<p>Manually stops camera capture</p>","parent_name":"SnapscreenClipSnapViewController"},"Classes/SnapscreenClipSnapViewController.html#/c:objc(cs)SnapscreenClipSnapViewController(im)startCameraCapture":{"name":"-startCameraCapture","abstract":"<p>Manually starts camera capture if possible</p>","parent_name":"SnapscreenClipSnapViewController"},"Classes/SnapscreenClipShareInformation.html#/c:objc(cs)SnapscreenClipShareInformation(py)videoPlayerURL":{"name":"videoPlayerURL","abstract":"<p>The URL to the Web Video Player for playing the shared clip</p>","parent_name":"SnapscreenClipShareInformation"},"Classes/SnapscreenClipShareInformation.html#/c:objc(cs)SnapscreenClipShareInformation(py)thumbnailURL":{"name":"thumbnailURL","abstract":"<p>The URL for a thumbnail of the shared clip</p>","parent_name":"SnapscreenClipShareInformation"},"Classes/SnapscreenCustomerConfiguration.html#/c:objc(cs)SnapscreenCustomerConfiguration(im)boolForKey:default:":{"name":"-boolForKey:default:","abstract":"<p>Gets a configuration bool with a key or the given default value if no such key is found in the configuration</p>","parent_name":"SnapscreenCustomerConfiguration"},"Classes/SnapscreenTvSearchResultEntry.html#/c:objc(cs)SnapscreenTvSearchResultEntry(py)channel":{"name":"channel","abstract":"<p>The TV channel this result is associated to</p>","parent_name":"SnapscreenTvSearchResultEntry"},"Classes/SnapscreenTvSearchResultEntry.html#/c:objc(cs)SnapscreenTvSearchResultEntry(py)epgUnit":{"name":"epgUnit","abstract":"<p>Optional resolved EPG unit that is currently playing on this channel</p>","parent_name":"SnapscreenTvSearchResultEntry"},"Classes/SnapscreenTvSearchResultEntry.html#/c:objc(cs)SnapscreenTvSearchResultEntry(py)timestamp":{"name":"timestamp","abstract":"<p>The unix timestamp (milliseconds since 1.1.1970) that represents the recognized frame</p>","parent_name":"SnapscreenTvSearchResultEntry"},"Classes/SnapscreenTvSearchResultEntry.html#/c:objc(cs)SnapscreenTvSearchResultEntry(py)snapscreenTimestampDelta":{"name":"snapscreenTimestampDelta","abstract":"<p>A relative delta to the current snapscreen timestamp - use this for very exact syncing with the backend by adding to <code>[SnapscreenKit currentSnapscreenTimestamp]</code></p>","parent_name":"SnapscreenTvSearchResultEntry"},"Classes/SnapscreenTvSearchResult.html#/c:objc(cs)SnapscreenTvSearchResult(py)results":{"name":"results","abstract":"<p>The individual entries for this search result. In most cases 1 result, but may contain multiple results that are ordered descending by their score, so that the first entry is the most likely match.</p>","parent_name":"SnapscreenTvSearchResult"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)channelId":{"name":"channelId","abstract":"<p>An internal channel identifier</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)channelCode":{"name":"channelCode","abstract":"<p>The Snapscreen-specific channel code for this TV channel. This is used to specify a channel in many other calls in the SDK.</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)countryCode":{"name":"countryCode","abstract":"<p>The ISO country code where this channel is aired</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)name":{"name":"name","abstract":"<p>Human-readable name for this TV channel</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)homepage":{"name":"homepage","abstract":"<p>An optional link to the homepage of this TV channel</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)logoImageUrl":{"name":"logoImageUrl","abstract":"<p>An optional link to a channel logo</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)posterImageUrl":{"name":"posterImageUrl","abstract":"<p>An optional link to a channel poster image</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)epgUnit":{"name":"epgUnit","abstract":"<p>Optional resolved EPG unit that is currently playing on this channel</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)sportEvent":{"name":"sportEvent","abstract":"<p>Optional resolved sport event that is currently live on this channel</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)liveImageUrl":{"name":"liveImageUrl","abstract":"<p>Optional URL for a live image of the currently epg unit on this channel</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(py)liveImageUrlSecured":{"name":"liveImageUrlSecured","abstract":"<p>Determines whether an access token is necessary when fetching the liveImageURL</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenTvChannel.html#/c:objc(cs)SnapscreenTvChannel(im)initWithChannelId:channelCode:countryCode:name:homepage:logoImageUrl:posterImageUrl:liveImageUrl:liveImageUrlSecured:":{"name":"-initWithChannelId:channelCode:countryCode:name:homepage:logoImageUrl:posterImageUrl:liveImageUrl:liveImageUrlSecured:","abstract":"<p>Initiailzer</p>","parent_name":"SnapscreenTvChannel"},"Classes/SnapscreenEpgUnitPerson.html#/c:objc(cs)SnapscreenEpgUnitPerson(py)name":{"name":"name","abstract":"<p>The name of the person, e.g. an actor&rsquo;s name</p>","parent_name":"SnapscreenEpgUnitPerson"},"Classes/SnapscreenEpgUnitPerson.html#/c:objc(cs)SnapscreenEpgUnitPerson(py)role":{"name":"role","abstract":"<p>The role of the person, e.g. the character&rsquo;s name</p>","parent_name":"SnapscreenEpgUnitPerson"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)actors":{"name":"actors","abstract":"<p>The actors in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)adapters":{"name":"adapters","abstract":"<p>The adapters in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)commentators":{"name":"commentators","abstract":"<p>The commentators in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)composers":{"name":"composers","abstract":"<p>The composers in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)directors":{"name":"directors","abstract":"<p>The directors in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)editors":{"name":"editors","abstract":"<p>The editors in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)guests":{"name":"guests","abstract":"<p>The guests in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)presenters":{"name":"presenters","abstract":"<p>The presenters in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)producers":{"name":"producers","abstract":"<p>The producers in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnitCredits.html#/c:objc(cs)SnapscreenEpgUnitCredits(py)writers":{"name":"writers","abstract":"<p>The writers in the EPG Unit</p>","parent_name":"SnapscreenEpgUnitCredits"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)programmId":{"name":"programmId","abstract":"<p>Unique internal identifier for this EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)channelId":{"name":"channelId","abstract":"<p>Snapscreen-internal identifier of the TV channel this EPG unit is on</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)startTime":{"name":"startTime","abstract":"<p>Current start timestamp of this EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)endTime":{"name":"endTime","abstract":"<p>End time for this epg unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)title":{"name":"title","abstract":"<p>Title of the EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)subtitle":{"name":"subtitle","abstract":"<p>Subtitle of the EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)programmDescription":{"name":"programmDescription","abstract":"<p>Full description of this EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)productionDate":{"name":"productionDate","abstract":"<p>Date when the EPG unit was first aired</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)credits":{"name":"credits","abstract":"<p>The credits for this epg unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)genres":{"name":"genres","abstract":"<p>A List of genres that match this EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)keywords":{"name":"keywords","abstract":"<p>Keywords for this EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)bannerUrl":{"name":"bannerUrl","abstract":"<p>the banner URL of this EPG unit.</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenEpgUnit.html#/c:objc(cs)SnapscreenEpgUnit(py)posterUrl":{"name":"posterUrl","abstract":"<p>Optional poster URL for this EPG unit</p>","parent_name":"SnapscreenEpgUnit"},"Classes/SnapscreenSportEventSearchResultEntry.html#/c:objc(cs)SnapscreenSportEventSearchResultEntry(py)event":{"name":"event","abstract":"<p>The event this result is associated to - only set if event is found</p>","parent_name":"SnapscreenSportEventSearchResultEntry"},"Classes/SnapscreenSportEventSearchResultEntry.html#/c:objc(cs)SnapscreenSportEventSearchResultEntry(py)channel":{"name":"channel","abstract":"<p>The channel this result is associated to - only set if no event was found as fallback</p>","parent_name":"SnapscreenSportEventSearchResultEntry"},"Classes/SnapscreenSportEventSearchResultEntry.html#/c:objc(cs)SnapscreenSportEventSearchResultEntry(py)timestamp":{"name":"timestamp","abstract":"<p>The unix timestamp (milliseconds since 1.1.1970) that represents the recognized frame</p>","parent_name":"SnapscreenSportEventSearchResultEntry"},"Classes/SnapscreenSportEventSearchResultEntry.html#/c:objc(cs)SnapscreenSportEventSearchResultEntry(py)snapscreenTimestampDelta":{"name":"snapscreenTimestampDelta","abstract":"<p>A relative delta to the current snapscreen timestamp - use this for very exact syncing with the backend by adding to [SnapscreenKit currentSnapscreenTimestamp]</p>","parent_name":"SnapscreenSportEventSearchResultEntry"},"Classes/SnapscreenSportEventSearchResult.html#/c:objc(cs)SnapscreenSportEventSearchResult(py)results":{"name":"results","abstract":"<p>The individual entries for this search result. In most cases 1 result, but may contain multiple results that are ordered descending by their score, so that the first entry is the most likely event</p>","parent_name":"SnapscreenSportEventSearchResult"},"Classes/SnapscreenSportEventCompetitor.html#/c:objc(cs)SnapscreenSportEventCompetitor(py)name":{"name":"name","abstract":"<p>The name of the competitor</p>","parent_name":"SnapscreenSportEventCompetitor"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)eventId":{"name":"eventId","abstract":"<p>Internal identifier for this event</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)externalId":{"name":"externalId","abstract":"<p>External identifier for this event</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)startTime":{"name":"startTime","abstract":"<p>The queued start date of the event</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)endTime":{"name":"endTime","abstract":"<p>The queued end date of the event</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)tvChannelId":{"name":"tvChannelId","abstract":"<p>An internal channel identifier</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)category":{"name":"category","abstract":"<p>The category of the event</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)sport":{"name":"sport","abstract":"<p>The name of the sport</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)tournament":{"name":"tournament","abstract":"<p>The name of the tournament</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)sportDataProviderCode":{"name":"sportDataProviderCode","abstract":"<p>Provider code for the sport data - e.q. Betradar</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)sportDataProviderMatchId":{"name":"sportDataProviderMatchId","abstract":"<p>Id for this event for the given sportDataProvider - e.g. Betradar MatchID</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSportEvent.html#/c:objc(cs)SnapscreenSportEvent(py)competitors":{"name":"competitors","abstract":"<p>Information about the competitors in this event</p>","parent_name":"SnapscreenSportEvent"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)searchForTvResults":{"name":"searchForTvResults","abstract":"<p>Search for TV results of type <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenTvSearchResult.html\">SnapscreenTvSearchResult</a></code></p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)searchForAdvertisements":{"name":"searchForAdvertisements","abstract":"<p>Search for advertisements of type <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenAdvertisementSearchResult.html\">SnapscreenAdvertisementSearchResult</a></code></p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)searchForSportEvents":{"name":"searchForSportEvents","abstract":"<p>Search for sport event results of type <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenSportEventSearchResult.html\">SnapscreenSportEventSearchResult</a></code></p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)automaticSnap":{"name":"automaticSnap","abstract":"<p>Perform automatic snapping (provided that the specified result types support autosnapping</p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)autosnapIntervalInSeconds":{"name":"autosnapIntervalInSeconds","abstract":"<p>The minimum interval between automatic snap attempts in seconds; Defaults to 0.5</p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)autosnapTimeoutDuration":{"name":"autosnapTimeoutDuration","abstract":"<p>The time interval after which automatic snapping stops when no results are found; Defaults to 30 seconds</p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)quadrangleDetection":{"name":"quadrangleDetection","abstract":"<p>Perform quadrangle detection and highlighting. Defaults to YES</p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)useCustomSnapLogo":{"name":"useCustomSnapLogo","abstract":"<p>Whether to use a custom logo in snap view or the original snapscreen logo. If true and no logo is provided, no logo is shown</p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)customSnapLogoImage":{"name":"customSnapLogoImage","abstract":"<p>A custom logo to display during snapping. The logo is shown as is and not modified in any way</p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSnapConfiguration.html#/c:objc(cs)SnapscreenSnapConfiguration(py)customSnapLogoImageSize":{"name":"customSnapLogoImageSize","abstract":"<p>The size for the custom snap logo. If not provided the implicit image size will be used</p>","parent_name":"SnapscreenSnapConfiguration"},"Classes/SnapscreenSearchResult.html#/c:objc(cs)SnapscreenSearchResult(py)tvSearchResult":{"name":"tvSearchResult","abstract":"<p>An optional TV search result if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenSnapConfiguration.html\">SnapscreenSnapConfiguration</a></code> specified to search for TV results and a result was found</p>","parent_name":"SnapscreenSearchResult"},"Classes/SnapscreenSearchResult.html#/c:objc(cs)SnapscreenSearchResult(py)advertisementSearchResult":{"name":"advertisementSearchResult","abstract":"<p>An optional advertisements search result if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenSnapConfiguration.html\">SnapscreenSnapConfiguration</a></code> specified to search for advertisements and a result was found</p>","parent_name":"SnapscreenSearchResult"},"Classes/SnapscreenSearchResult.html#/c:objc(cs)SnapscreenSearchResult(py)sportEventSearchResult":{"name":"sportEventSearchResult","abstract":"<p>An optional sports event search result if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenSnapConfiguration.html\">SnapscreenSnapConfiguration</a></code> specified to search for sport events and a result was found</p>","parent_name":"SnapscreenSearchResult"},"Classes/SnapscreenSearchResult.html#/c:objc(cs)SnapscreenSearchResult(py)resultQuadrangle":{"name":"resultQuadrangle","abstract":"<p>An optional quadrangle determining the position of the result in the view</p>","parent_name":"SnapscreenSearchResult"},"Classes/SnapscreenResultQuadrangle.html#/c:objc(cs)SnapscreenResultQuadrangle(py)quadranglePath":{"name":"quadranglePath","abstract":"<p>A closed Bezierpath connecting the 4 corners of the quadrangle - might not be perfectly rectangular due to perspective distortions (e.g. looking at the TV at an angle</p>","parent_name":"SnapscreenResultQuadrangle"},"Classes/SnapscreenResultQuadrangle.html#/c:objc(cs)SnapscreenResultQuadrangle(py)quadrangleEnclosingRect":{"name":"quadrangleEnclosingRect","abstract":"<p>A rectangle enclosing all 4 corners of the quadrangle</p>","parent_name":"SnapscreenResultQuadrangle"},"Classes/SnapscreenAdvertisementSearchResultEntry.html#/c:objc(cs)SnapscreenAdvertisementSearchResultEntry(py)advertisement":{"name":"advertisement","abstract":"<p>The advertisement this result is associated to</p>","parent_name":"SnapscreenAdvertisementSearchResultEntry"},"Classes/SnapscreenAdvertisementSearchResultEntry.html#/c:objc(cs)SnapscreenAdvertisementSearchResultEntry(py)offset":{"name":"offset","abstract":"<p>The relative offset from the start of the ad in milliseconds for the recognized frame</p>","parent_name":"SnapscreenAdvertisementSearchResultEntry"},"Classes/SnapscreenAdvertisementSearchResultEntry.html#/c:objc(cs)SnapscreenAdvertisementSearchResultEntry(py)offsetInSeconds":{"name":"offsetInSeconds","abstract":"<p>The relative offset from the start of the ad in seconds for the recognized frame</p>","parent_name":"SnapscreenAdvertisementSearchResultEntry"},"Classes/SnapscreenAdvertisementSearchResult.html#/c:objc(cs)SnapscreenAdvertisementSearchResult(py)results":{"name":"results","abstract":"<p>The individual entries for this search result. In most cases 1 result, but may contain multiple results that are ordered descending by their score, so that the first entry is the most likely match</p>","parent_name":"SnapscreenAdvertisementSearchResult"},"Classes/SnapscreenAdvertisement.html#/c:objc(cs)SnapscreenAdvertisement(py)advertisementId":{"name":"advertisementId","abstract":"<p>The unique ID of this advertisement - intended for internal purposes only</p>","parent_name":"SnapscreenAdvertisement"},"Classes/SnapscreenAdvertisement.html#/c:objc(cs)SnapscreenAdvertisement(py)advertisementTitle":{"name":"advertisementTitle","abstract":"<p>The title of the advertisement</p>","parent_name":"SnapscreenAdvertisement"},"Classes/SnapscreenAdvertisement.html#/c:objc(cs)SnapscreenAdvertisement(py)advertisementDescription":{"name":"advertisementDescription","abstract":"<p>The description of the advertisement</p>","parent_name":"SnapscreenAdvertisement"},"Classes/SnapscreenAdvertisement.html#/c:objc(cs)SnapscreenAdvertisement(py)landingPageURL":{"name":"landingPageURL","abstract":"<p>The landing page URL this advertisements points to</p>","parent_name":"SnapscreenAdvertisement"},"Classes/SnapscreenAdvertisement.html#/c:objc(cs)SnapscreenAdvertisement(py)duration":{"name":"duration","abstract":"<p>The duration of the advertisement in seconds or nil if not available</p>","parent_name":"SnapscreenAdvertisement"},"Classes/SnapscreenAccessTokenHolder.html#/c:objc(cs)SnapscreenAccessTokenHolder(py)accessToken":{"name":"accessToken","abstract":"<p>The current access token or nil if no access token was retrieved yet</p>","parent_name":"SnapscreenAccessTokenHolder"},"Classes/SnapscreenAccessToken.html#/c:objc(cs)SnapscreenAccessToken(py)accessToken":{"name":"accessToken","abstract":"<p>The actual access token</p>","parent_name":"SnapscreenAccessToken"},"Classes/SnapscreenAccessToken.html#/c:objc(cs)SnapscreenAccessToken(py)tokenType":{"name":"tokenType","abstract":"<p>The token type</p>","parent_name":"SnapscreenAccessToken"},"Classes/SnapscreenAccessToken.html#/c:objc(cs)SnapscreenAccessToken(py)expirationDate":{"name":"expirationDate","abstract":"<p>Expiration date of this token</p>","parent_name":"SnapscreenAccessToken"},"Classes/SnapscreenAccessToken.html#/c:objc(cs)SnapscreenAccessToken(py)refreshToken":{"name":"refreshToken","abstract":"<p>Refresh token used for obtaining a new refresh token</p>","parent_name":"SnapscreenAccessToken"},"Classes/SnapscreenAccessToken.html#/c:objc(cs)SnapscreenAccessToken(im)initWithAccessToken:tokenType:refreshToken:scope:expiresIn:":{"name":"-initWithAccessToken:tokenType:refreshToken:scope:expiresIn:","abstract":"<p>Initializer</p>","parent_name":"SnapscreenAccessToken"},"Classes.html#/c:objc(cs)SnapscreenNSLogLoggingHandler":{"name":"SnapscreenNSLogLoggingHandler","abstract":"<p>Default SnapscreenLoggingHandler implementation that logs all messages to NSLog. Use only in test builds or while debugging and <em>NOT</em> in Release builds.</p>"},"Classes/SnapscreenAccessToken.html":{"name":"SnapscreenAccessToken","abstract":"<p>Represents an access token for accessing the Snapscreen API.</p>"},"Classes/SnapscreenAccessTokenHolder.html":{"name":"SnapscreenAccessTokenHolder","abstract":"<p>Holds the current Access Token for communicating with the Snapscreen API.</p>"},"Classes/SnapscreenAdvertisement.html":{"name":"SnapscreenAdvertisement","abstract":"<p>Represents an advertisement</p>"},"Classes/SnapscreenAdvertisementSearchResult.html":{"name":"SnapscreenAdvertisementSearchResult","abstract":"<p>Represents the result from an advertisement search.</p>"},"Classes/SnapscreenAdvertisementSearchResultEntry.html":{"name":"SnapscreenAdvertisementSearchResultEntry","abstract":"<p>A single result entry from an advertisement search. This represent an individual advertisement at a certain point in time</p>"},"Classes/SnapscreenResultQuadrangle.html":{"name":"SnapscreenResultQuadrangle","abstract":"<p>Represents a quadrangle on the screen that contains a search result.</p>"},"Classes/SnapscreenSearchResult.html":{"name":"SnapscreenSearchResult","abstract":"<p>Represent the result from a search.</p>"},"Classes.html#/c:objc(cs)SnapscreenSearchResultEntry":{"name":"SnapscreenSearchResultEntry","abstract":"<p>Base class for all result entries returned from a snap.</p>"},"Classes/SnapscreenSnapConfiguration.html":{"name":"SnapscreenSnapConfiguration","abstract":"<p>Configuration object to be passed when snapping. Allows you to specifiy what result types you are interested in and additional behaviour of the snapping process.</p>"},"Classes/SnapscreenSportEvent.html":{"name":"SnapscreenSportEvent","abstract":"<p>Represents a match</p>"},"Classes/SnapscreenSportEventCompetitor.html":{"name":"SnapscreenSportEventCompetitor","abstract":"<p>Represents a competitor in a sport event</p>"},"Classes/SnapscreenSportEventSearchResult.html":{"name":"SnapscreenSportEventSearchResult","abstract":"<p>Represents the result from a sports event search.</p>"},"Classes/SnapscreenSportEventSearchResultEntry.html":{"name":"SnapscreenSportEventSearchResultEntry","abstract":"<p>A single result entry from a sport event search. This represents an individual event at a certain point in time.</p>"},"Classes/SnapscreenEpgUnit.html":{"name":"SnapscreenEpgUnit","abstract":"<p>Represents a programme of the electronic programme guide (EPG) of a TV channel</p>"},"Classes/SnapscreenEpgUnitCredits.html":{"name":"SnapscreenEpgUnitCredits","abstract":"<p>Represents information about credits of an epg unit</p>"},"Classes/SnapscreenEpgUnitPerson.html":{"name":"SnapscreenEpgUnitPerson","abstract":"<p>Represents information about a person that is part of an EPG Unit in some form</p>"},"Classes/SnapscreenTvChannel.html":{"name":"SnapscreenTvChannel","abstract":"<p>Represents a TV channel with the internal Snapscreen representation</p>"},"Classes/SnapscreenTvSearchResult.html":{"name":"SnapscreenTvSearchResult","abstract":"<p>Represent the result from a TV search.</p>"},"Classes/SnapscreenTvSearchResultEntry.html":{"name":"SnapscreenTvSearchResultEntry","abstract":"<p>A single result entry from a tv search. This represents an individual program on a single channel at a certain point in time.</p>"},"Classes/SnapscreenCustomerConfiguration.html":{"name":"SnapscreenCustomerConfiguration","abstract":"<p>Customer configuration with specific snapscreen settings for this customer</p>"},"Classes/SnapscreenClipShareInformation.html":{"name":"SnapscreenClipShareInformation","abstract":"<p>Information about a shared clip.</p>"},"Classes/SnapscreenClipSnapViewController.html":{"name":"SnapscreenClipSnapViewController","abstract":"<p>View Controller to provide clip snapping functionality as a standalone feature without any of the surrounding flow and UI.</p>"},"Classes/SnapscreenClipSharingConfiguration.html":{"name":"SnapscreenClipSharingConfiguration","abstract":"<p>Configuration object for customizing the appearance of the clip sharing UI.</p>"},"Classes/SnapscreenClipSharingNavigationController.html":{"name":"SnapscreenClipSharingNavigationController","abstract":"<p>Navigation Controller that contains a SnapscreenClipSharingViewController if you want to present the UI with a NavigationBar.</p>"},"Classes/SnapscreenClipSharingViewController.html":{"name":"SnapscreenClipSharingViewController","abstract":"<p>ViewController to present clip sharing. Automatically presents the tutorial if necessary, guides the user through snapping and presents a clip sharing UI at the end.</p>"},"Classes/SnapscreenClipSharingTutorialContent.html":{"name":"SnapscreenClipSharingTutorialContent","abstract":"<p>Configuration object of a single page in the tutorial</p>"},"Classes.html#/c:objc(cs)SnapscreenSnapResultsViewController":{"name":"SnapscreenSnapResultsViewController","abstract":"<p>View Controller for presenting recognized snap results when result is not unique and returns multiple possible matches</p>"},"Classes/SnapscreenARSnapViewController.html":{"name":"SnapscreenARSnapViewController","abstract":"<p>SnapscreenARSnapViewController offers the snapping logic from Snapscreen to your application and enrich it via AR-like features. Instantiate via <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenKit.html\">SnapscreenKit</a></code> and then display it in your application. The recommended way to present the view controller is to present it as a modal view that covers the whole screen.</p>"},"Classes/SnapscreenSnapViewController.html":{"name":"SnapscreenSnapViewController","abstract":"<p>SnapscreenSnapViewController offers the snapping logic from Snapscreen to your application. Instantiate via <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SnapscreenKit.html\">SnapscreenKit</a></code> and then display it in your application. The recommended way to present the view controller is to present it as a modal view that covers the whole screen.</p>"},"Classes/SnapscreenKit.html":{"name":"SnapscreenKit","abstract":"<p>SnapscreenKit offers integration of the Snapscreen functions in your app. Before using, make sure to initially SnapscreenKit with the appropriate clientID and clientSecret and provide optional additional handlers.</p>"},"Classes/SnapscreenSnapper.html":{"name":"SnapscreenSnapper","abstract":"<p>SnapscreenSnapper offers a direct API for getting snap and quadrangle results. This offers the ability to build more immersive experiences with custom UIs while still providing snap functionality.</p>"},"setup-guide.html":{"name":"Setup Guide"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}